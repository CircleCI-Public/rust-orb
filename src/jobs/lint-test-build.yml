description: >
  Check linting with Clippy, run any present tests then build the crate.

parameters:
  version:
    description: Version of Rust executor to utilize.
    type: string
    default: 1.49.0
  with_cache:
    description: Whether to restore and save the cache or not - set to no if running multiple commands in one job.
    type: boolean
    default: true
  cache_version:
    description: Cache version to use - increment this to build a fresh cache.
    type: string
    default: "v1"
  clippy_arguments:
    description: Arguments to pass to cargo run clippy.
    type: string
    default: ""
  release:
    description: Whether to build the binary for release or debug.
    type: boolean
    default: false
  working_directory:
    type: string
    default: "~/project"
    description: Path to the directory containing your Cargo.lock file. Not needed if Cargo.lock lives in the root.

executor:
  name: default
  tag: << parameters.version >>

steps:
  - checkout
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - restore_cache:
            keys:
              - cargo-{{ checksum "Cargo.lock" }}-<<parameters.cache_version>>
              - cargo-{{ checksum "Cargo.lock" }}
              - cargo-
  # Cache is likely restored above, so we don't bother beyond that.
  - clippy:
      flags: <<parameters.clippy_arguments>>
      with_cache: false
      working_directory: <<parameters.working_directory>>
  - test:
      with_cache: false
      working_directory: <<parameters.working_directory>>
  - build:
      release: <<parameters.release>>
      with_cache: false
      working_directory: <<parameters.working_directory>>
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - save_cache:
            key: cargo-{{ checksum "Cargo.lock" }}-<<parameters.cache_version>>
            paths:
              - ~/.cargo
